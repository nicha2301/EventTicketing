apiVersion: apps/v1
kind: Deployment
metadata:
  name: event-ticketing-app
  labels:
    app: event-ticketing
spec:
  replicas: 2
  selector:
    matchLabels:
      app: event-ticketing
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: event-ticketing
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: event-ticketing
        image: ${DOCKER_REGISTRY}/event-ticketing:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: "prod"
        - name: SPRING_DATASOURCE_URL
          valueFrom:
            secretKeyRef:
              name: event-ticketing-secrets
              key: db-url
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: event-ticketing-secrets
              key: db-username
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: event-ticketing-secrets
              key: db-password
        - name: SPRING_REDIS_HOST
          value: "event-ticketing-redis"
        - name: JAVA_OPTS
          value: "-Xms512m -Xmx1024m"
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 60
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 120
          periodSeconds: 30
        volumeMounts:
        - name: logs-volume
          mountPath: /home/appuser/event-ticketing/logs
        - name: uploads-volume
          mountPath: /home/appuser/event-ticketing/uploads
      volumes:
      - name: logs-volume
        persistentVolumeClaim:
          claimName: event-ticketing-logs-pvc
      - name: uploads-volume
        persistentVolumeClaim:
          claimName: event-ticketing-uploads-pvc 