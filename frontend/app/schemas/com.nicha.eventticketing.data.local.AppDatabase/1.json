{
  "formatVersion": 1,
  "database": {
    "version": 1,
    "identityHash": "31684ad4dbcd0834c52e9a17415d70cb",
    "entities": [
      {
        "tableName": "events",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `title` TEXT NOT NULL, `description` TEXT NOT NULL, `startDate` INTEGER NOT NULL, `endDate` INTEGER NOT NULL, `status` TEXT NOT NULL, `address` TEXT, `latitude` REAL, `longitude` REAL, `organizerId` TEXT NOT NULL, `organizerName` TEXT NOT NULL, `featuredImageUrl` TEXT, `minTicketPrice` REAL, `maxTicketPrice` REAL, `ticketsSold` INTEGER NOT NULL, `totalTickets` INTEGER NOT NULL, `averageRating` REAL NOT NULL, `ratingCount` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `isFavorite` INTEGER NOT NULL, `lastUpdatedLocally` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "title",
            "columnName": "title",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "startDate",
            "columnName": "startDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "endDate",
            "columnName": "endDate",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "latitude",
            "columnName": "latitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "longitude",
            "columnName": "longitude",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "organizerId",
            "columnName": "organizerId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "organizerName",
            "columnName": "organizerName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "featuredImageUrl",
            "columnName": "featuredImageUrl",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "minTicketPrice",
            "columnName": "minTicketPrice",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "maxTicketPrice",
            "columnName": "maxTicketPrice",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "ticketsSold",
            "columnName": "ticketsSold",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "totalTickets",
            "columnName": "totalTickets",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "averageRating",
            "columnName": "averageRating",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "ratingCount",
            "columnName": "ratingCount",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "isFavorite",
            "columnName": "isFavorite",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdatedLocally",
            "columnName": "lastUpdatedLocally",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "users",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `email` TEXT NOT NULL, `fullName` TEXT NOT NULL, `phoneNumber` TEXT, `address` TEXT, `bio` TEXT, `role` TEXT NOT NULL, `enabled` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `lastUpdatedLocally` INTEGER NOT NULL, PRIMARY KEY(`id`))",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "email",
            "columnName": "email",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "fullName",
            "columnName": "fullName",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "phoneNumber",
            "columnName": "phoneNumber",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "address",
            "columnName": "address",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "bio",
            "columnName": "bio",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "role",
            "columnName": "role",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "enabled",
            "columnName": "enabled",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdatedLocally",
            "columnName": "lastUpdatedLocally",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [],
        "foreignKeys": []
      },
      {
        "tableName": "tickets",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `ticketTypeId` TEXT NOT NULL, `userId` TEXT NOT NULL, `eventId` TEXT NOT NULL, `orderCode` TEXT NOT NULL, `qrCode` TEXT, `price` REAL NOT NULL, `status` TEXT NOT NULL, `checkedIn` INTEGER NOT NULL, `checkedInAt` INTEGER, `purchasedAt` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `lastUpdatedLocally` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`ticketTypeId`) REFERENCES `ticket_types`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE , FOREIGN KEY(`eventId`) REFERENCES `events`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "ticketTypeId",
            "columnName": "ticketTypeId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "orderCode",
            "columnName": "orderCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "qrCode",
            "columnName": "qrCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "checkedIn",
            "columnName": "checkedIn",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "checkedInAt",
            "columnName": "checkedInAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "purchasedAt",
            "columnName": "purchasedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdatedLocally",
            "columnName": "lastUpdatedLocally",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_tickets_ticketTypeId",
            "unique": false,
            "columnNames": [
              "ticketTypeId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tickets_ticketTypeId` ON `${TABLE_NAME}` (`ticketTypeId`)"
          },
          {
            "name": "index_tickets_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tickets_userId` ON `${TABLE_NAME}` (`userId`)"
          },
          {
            "name": "index_tickets_eventId",
            "unique": false,
            "columnNames": [
              "eventId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_tickets_eventId` ON `${TABLE_NAME}` (`eventId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "ticket_types",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "ticketTypeId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          },
          {
            "table": "events",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "ticket_types",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `eventId` TEXT NOT NULL, `name` TEXT NOT NULL, `description` TEXT, `price` REAL NOT NULL, `quantity` INTEGER NOT NULL, `quantitySold` INTEGER NOT NULL, `maxPerOrder` INTEGER NOT NULL, `minPerOrder` INTEGER NOT NULL, `saleStartDate` INTEGER, `saleEndDate` INTEGER, `active` INTEGER NOT NULL, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `lastUpdatedLocally` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`eventId`) REFERENCES `events`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "eventId",
            "columnName": "eventId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "price",
            "columnName": "price",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "quantity",
            "columnName": "quantity",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "quantitySold",
            "columnName": "quantitySold",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "maxPerOrder",
            "columnName": "maxPerOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "minPerOrder",
            "columnName": "minPerOrder",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "saleStartDate",
            "columnName": "saleStartDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "saleEndDate",
            "columnName": "saleEndDate",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "active",
            "columnName": "active",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdatedLocally",
            "columnName": "lastUpdatedLocally",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_ticket_types_eventId",
            "unique": false,
            "columnNames": [
              "eventId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_ticket_types_eventId` ON `${TABLE_NAME}` (`eventId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "events",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "eventId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      },
      {
        "tableName": "payments",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` TEXT NOT NULL, `userId` TEXT NOT NULL, `amount` REAL NOT NULL, `currency` TEXT NOT NULL, `paymentMethod` TEXT NOT NULL, `status` TEXT NOT NULL, `transactionCode` TEXT, `orderCode` TEXT NOT NULL, `refundAmount` REAL, `refundedAt` INTEGER, `createdAt` INTEGER NOT NULL, `updatedAt` INTEGER NOT NULL, `lastUpdatedLocally` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`userId`) REFERENCES `users`(`id`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "userId",
            "columnName": "userId",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "amount",
            "columnName": "amount",
            "affinity": "REAL",
            "notNull": true
          },
          {
            "fieldPath": "currency",
            "columnName": "currency",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "paymentMethod",
            "columnName": "paymentMethod",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "status",
            "columnName": "status",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "transactionCode",
            "columnName": "transactionCode",
            "affinity": "TEXT",
            "notNull": false
          },
          {
            "fieldPath": "orderCode",
            "columnName": "orderCode",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "refundAmount",
            "columnName": "refundAmount",
            "affinity": "REAL",
            "notNull": false
          },
          {
            "fieldPath": "refundedAt",
            "columnName": "refundedAt",
            "affinity": "INTEGER",
            "notNull": false
          },
          {
            "fieldPath": "createdAt",
            "columnName": "createdAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "updatedAt",
            "columnName": "updatedAt",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "lastUpdatedLocally",
            "columnName": "lastUpdatedLocally",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "index_payments_userId",
            "unique": false,
            "columnNames": [
              "userId"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_payments_userId` ON `${TABLE_NAME}` (`userId`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "users",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "userId"
            ],
            "referencedColumns": [
              "id"
            ]
          }
        ]
      }
    ],
    "views": [],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, '31684ad4dbcd0834c52e9a17415d70cb')"
    ]
  }
}