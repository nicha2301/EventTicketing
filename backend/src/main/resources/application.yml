spring:
  application:
    name: event-ticketing
  datasource:
    url: jdbc:postgresql://localhost:5432/event-ticketing
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.xml
    enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: verifymailgroup30@gmail.com
    password: yvztuzetgfvbcyip
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

server:
  port: 8080
  servlet:
    context-path: /
  error:
    include-stacktrace: never

app:
  jwt:
    secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
    expiration: 86400 # 24 hours in seconds
  url: http://localhost:8080
  upload:
    dir: ${user.home}/event-ticketing/uploads
  cors:
    allowed-origins: http://localhost:3000, https://eventticketing.com

logging:
  level:
    root: INFO
    com.eventticketing: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  packages-to-scan: com.eventticketing.backend.controller

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name} 

payment:
  vnpay:
    return-url: http://localhost:8080/api/payments/vnpay-return
    tmn-code: EVENTTICKETING
    hash-secret: ODJLXUDLKDJFLDJFLJDLFJDLF
  stripe:
    secret-key: sk_test_123456789
    webhook-secret: whsec_123456789 