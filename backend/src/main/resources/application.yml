spring:
  application:
    name: event-ticketing
  datasource:
    url: jdbc:postgresql://localhost:5432/event-ticketing
    username: postgres
    password: 123
    driver-class-name: org.postgresql.Driver
    hikari:
      connection-timeout: 20000 # 20 seconds
      minimum-idle: 5
      maximum-pool-size: 20
      idle-timeout: 300000 # 5 minutes
      max-lifetime: 1200000 # 20 minutes
      auto-commit: true
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 50
          batch_versioned_data: true
        order_inserts: true
        order_updates: true
        generate_statistics: false
    defer-datasource-initialization: true
  sql:
    init:
      mode: always
      continue-on-error: true
      schema: classpath:remove-liquibase.sql,classpath:schema.sql,classpath:update_metadata_column.sql,classpath:update_payment_url_column.sql
      data: classpath:data.sql
  mail:
    host: smtp.gmail.com
    port: 587
    username: verifymailgroup30@gmail.com
    password: yvztuzetgfvbcyip
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  task:
    scheduling:
      pool:
        size: 5
      thread-name-prefix: event-ticketing-scheduler-
  cache:
    type: none # Đổi từ redis sang none
#    redis:
#      time-to-live: 3600000 # 1 hour in milliseconds
#      cache-null-values: false
#  data:
#    redis:
#      host: localhost
#      port: 6379
#      password: # Để trống nếu không có mật khẩu
#      timeout: 2000 # ms
#      database: 0 # Sử dụng database số 0
  main:
    allow-bean-definition-overriding: true

server:
  port: 8080
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true
  error:
    include-stacktrace: never
  tomcat:
    max-threads: 200
    max-connections: 10000
    accept-count: 100
    connection-timeout: 5000
    uri-encoding: UTF-8

app:
  jwt:
    secret: 5367566B59703373367639792F423F4528482B4D6251655468576D5A71347437
    expiration: 86400 # 24 hours in seconds
    refresh-expiration: 604800 # 7 days in seconds
  url: http://localhost:8080
  upload:
    dir: ${user.home}/event-ticketing/uploads
    url-prefix: /uploads/
  cors:
    allowed-origins: http://localhost:3000, https://eventticketing.com
  notification:
    retention-days: 90 # Số ngày giữ thông báo trước khi xóa
    email:
      enabled: true
      from-email: noreply@eventticketing.com
      from-name: Event Ticketing
      templates:
        activation: email/activation
        password-reset: email/password-reset
        ticket-confirmation: email/ticket-confirmation
        event-reminder: email/event-reminder
        organizer-notification: email/organizer-notification
        comment-notification: email/comment-notification
        rating-notification: email/rating-notification
    push:
      enabled: true
      firebase-config-path: firebase-service-account.json

      use-classpath-resource: true
      icons:
        android: ic_notification
        web: /images/logo.png
logging:
  level:
    root: INFO
    org.springframework: INFO
    com.eventticketing: DEBUG
    org.springframework.security: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  file:
    name: ${user.home}/event-ticketing/logs/event-ticketing.log
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 30
      total-size-cap: 3GB

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    disable-swagger-default-url: true
  packages-to-scan: com.eventticketing.backend.controller

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus,loggers,env,mappings,scheduledtasks,caches
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      roles: ADMIN
    info:
      enabled: true
    metrics:
      enabled: true
    prometheus:
      enabled: true
  info:
    env:
      enabled: true
    git:
      enabled: true
    build:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
      sla:
        http.server.requests: 50ms, 100ms, 200ms, 500ms
  prometheus:
    metrics:
      export:
        enabled: true

payment:
  vnpay:
    return-url: http://localhost:8080/api/payments/vnpay-return
    tmn-code: EVL5NZNI
    hash-secret: 3NKOGRBUWM008DMQ16ZH1YHIUUZ0FEDX
    payment-url: https://sandbox.vnpayment.vn/paymentv2/vpcpay.html
  momo:
    return-url: http://localhost:8080/api/payments/momo-return
    ipn-url: http://localhost:8080/api/payments/momo-ipn
    partner-code: MOMOXXXX
    access-key: AccessKeyXXXX
    secret-key: SecretKeyXXXX
    api-endpoint: https://test-payment.momo.vn/v2/gateway/api/create